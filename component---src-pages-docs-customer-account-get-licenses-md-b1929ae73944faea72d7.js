"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[4821],{85157:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return m},default:function(){return p}});var a=n(87462),r=n(45987),d=(n(35776),n(3905)),l=n(91515);const i=["components"],m={},o={_frontmatter:m},u=l.Z;function p(e){let{components:t}=e,n=(0,r.Z)(e,i);return(0,d.mdx)(u,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"get-licenses-pending-partner-order"},"Get licenses pending partner order"),(0,d.mdx)("p",null,"Use the ",(0,d.mdx)("inlineCode",{parentName:"p"},"GET /v3/customers/<customer-id>/open-acquisitions")," to get all the licenses for the customer and their corresponding quantities for which partner is yet to place order. Partners can use this API in conjunction with the ",(0,d.mdx)("a",{parentName:"p",href:"../notification_management/get_details.md"},"notification")," API to fetch all the products and quantities for each customer for which order has not been placed."),(0,d.mdx)("h2",{id:"request-header"},"Request header"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Parameter"),(0,d.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"X-Request-Id"),(0,d.mdx)("td",{parentName:"tr",align:null},"A unique identifier for the call. The value should be reset for every single request. If this is not provided, then a request ID will be automatically generated. Using a duplicate request ID may return an error.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"X-Correlation-Id"),(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("strong",{parentName:"td"},"Required"),". A unique identifier for the call. This is to ensure idempotency. In the case of a timeout, the retry call could include the same value. Upon receiving some response, the value should be reset for the next call.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"Accept"),(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("strong",{parentName:"td"},"Required"),'. Specifies the response type. Must be "application/json" for proper usage.')),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"Content-Type"),(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("strong",{parentName:"td"},"Required"),'. Specifies the request type. Must be "application/json" for proper usage.')),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"Authorization"),(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("strong",{parentName:"td"},"Required"),". Authorization token in the form ",(0,d.mdx)("inlineCode",{parentName:"td"},"Bearer <token>"))),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"X-Api-Key"),(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("strong",{parentName:"td"},"Required"),". The API Key for your integration")))),(0,d.mdx)("h2",{id:"request-body"},"Request body"),(0,d.mdx)("p",null,"None."),(0,d.mdx)("h2",{id:"response-body"},"Response body"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{\n"customerId": "1005375278",\n"resellerId": "1000214906",\n"licenseCount": 2,\n"unpaidLicenses": [\n{\n"referenceId": "PO281097476551717943",\n"creationDate": "2024-03-28T06:03:50Z",\n"expiryDate": "2024-04-04T06:03:50Z",\n"quantity": 1,\n"productName": "Audition"\n},\n{\n"referenceId": "PO281097476551717943",\n"creationDate": "2024-03-28T06:03:51Z",\n"expiryDate": "2024-04-04T06:03:51Z",\n"quantity": 1,\n"productName": "Acrobat Pro"\n}\n]\n}\n')),(0,d.mdx)("h3",{id:"http-status-codes"},"HTTP status codes"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Status code"),(0,d.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"200"),(0,d.mdx)("td",{parentName:"tr",align:null},"Successfully returned open seat addition details.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"400"),(0,d.mdx)("td",{parentName:"tr",align:null},"Bad request")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"401"),(0,d.mdx)("td",{parentName:"tr",align:null},"Invalid Authorization token")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"403"),(0,d.mdx)("td",{parentName:"tr",align:null},"Invalid API Key")))))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-customer-account-get-licenses-md-b1929ae73944faea72d7.js.map